element Vertex end
element Edge end

const edges : edgeset{Edge}(Vertex,Vertex) = load (argv[1]);

const vertices : vertexset{Vertex} = edges.getVertices();
const IDs : vector{Vertex}(int) = 1;

func updateEdge(src : Vertex, dst : Vertex)
    IDs[dst] min= IDs[src];
end

func init(v : Vertex)
     IDs[v] = v;
end

func toFilter(v : Vertex) -> output : bool
    output = true;
end

func main()
    var n : int = edges.getVertices();
    for trail in 0:10
        var frontier : vertexset{Vertex} = new vertexset{Vertex}(n);
        startTimer();
        vertices.apply(init);
        #s0# while (frontier.getVertexSetSize() != 0)
            #s1# var output: vertexset{Vertex} = edges.from(frontier).to(toFilter).applyModified(updateEdge,IDs);
            delete frontier;
            frontier = output;
        end
        var elapsed_time : float = stopTimer();
	    delete frontier;
        print "elapsed time: ";
        print elapsed_time;
    end
end


