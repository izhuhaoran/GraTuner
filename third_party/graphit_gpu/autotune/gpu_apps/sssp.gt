element Vertex end
element Edge end

const edges : edgeset{Edge}(Vertex,Vertex, int) = load (argv[1]);
const vertices : vertexset{Vertex} = edges.getVertices();
const SP : vector{Vertex}(int) = 2147483647; %should be INT_MAX

func updateEdge(src : Vertex, dst : Vertex,  weight : int)
     SP[dst] min= (SP[src] + weight);
end

func reset(v: Vertex)
    SP[v] = 2147483647;
end

func toFilter(v : Vertex) -> output : bool
    output = true;
end

func main()
    for trail in 0:10
        var frontier : vertexset{Vertex} = new vertexset{Vertex}(0);
    startTimer();
        vertices.apply(reset);
    var start_vertex : int = atoi(argv[2]);
        frontier.addVertex(start_vertex);
        SP[start_vertex] = start_vertex;

        #s0# while (frontier.getVertexSetSize() != 0)
            #s1# var output : vertexset{Vertex} = edges.from(frontier).to(toFilter).applyModified(updateEdge, SP);
        delete frontier;
        frontier = output;
        end
        var elapsed_time : float = stopTimer();
    delete frontier;
        print "elapsed time: ";
        print elapsed_time;
    end
end

